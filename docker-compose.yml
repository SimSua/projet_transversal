version: "3.7"
services:
  db:
    image: postgres
    container_name: postgres
    working_dir: /application
    volumes:
      - ./src-api/docker/pgsql:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=app_emergency,app_simulator
    ports:
      - "5433:5432"
    networks:
      - api

  webserver:
    image: nginx:alpine
    container_name: webserver
    working_dir: /application
    volumes:
     - .:/application
     - ./src-api/docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
     - "8081:80"
    networks:
      - api

  php-fpm:
    build: ./src-api/docker/php-fpm
    container_name: php-fpm
    working_dir: /application
    volumes:
      - ./src-api/server:/application
      - ./src-api/docker/php-fpm/php-ini-overrides.ini:/etc/php/7.2/fpm/conf.d/99-overrides.ini
    networks:
      - api

  manager:
    image: openjdk:13-alpine
    container_name: manager
    working_dir: /application
    volumes:
      - ./Emergency_Manager/manager.jar:/application/manager.jar
    command: java -jar manager.jar
    networks:
      - api

  emergency_view:
    build: ./Emergency_Web
    container_name: emergency_view
    working_dir: /application
    volumes:
      - ./Emergency_Web:/application
    command: python run.py localhost webserver:80 docker
    ports:
      - "5000:5000"
    networks:
      - api
  
  emergency_iot:
    build: ./Emergency_Web
    container_name: emergency_iot
    working_dir: /application
    volumes:
      - ./Emergency_Web:/application
    devices:
      - "/dev/ttyUSB1:/dev/ttyUSB1"
    command: python receiver_uart.py webserver:80 ttyUSB1
    networks:
      - api

  simulation_view:
    build: ./Simulation_Web
    container_name: simulation_view
    volumes: 
      - ./Simulation_Web:/application
    working_dir: /application
    ports:
      - "5001:5000"
    command: python run.py localhost webserver:80 docker 
    networks:
      - api

  simulation_iot:
    build: ./Simulation_Web
    container_name: simulation_iot
    working_dir: /application
    volumes:
      - ./Simulation_Web:/application
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"
    command: python sender_uart.py webserver:80 ttyUSB0
    networks:
      - api

  influx:
    image: influxdb:1.7.9
    container_name: influx
    volumes:
      - ./influx:/var/lib/influxdb
    ports:
      - "8086:8086"
    networks:
      - api
    
  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes: 
      - ./grafana/grafana-storage:/var/lib/grafana
    ports: 
      - "3000:3000"
    user: "472"
    #entrypoint: bash -c "tail -f /dev/null"
    networks: 
      - api

  broker:
    image: eclipse-mosquitto
    container_name: broker
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - api

  telegraf:
    image: telegraf
    container_name: telegraf
    volumes:
      - ./telegraf:/etc/telegraf
    networks:
      - api    

networks:
  api:
